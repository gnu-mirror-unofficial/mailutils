@c snarfed from mu_address.c:73
@deffn {Scheme Procedure} mu-address-get-personal address [num]
Return personal part of the @var{num}th email address from @var{address}.

@end deffn

@c snarfed from mu_address.c:85
@deffn {Scheme Procedure} mu-address-get-comments address [num]
Return comment part of the @var{num}th email address from @var{address}.
@emph{Note}: this function is a placeholder. The required functionality
is not yet provided by the @command{libmailutils} library.

@end deffn

@c snarfed from mu_address.c:95
@deffn {Scheme Procedure} mu-address-get-email address [num]
Return email part of the @var{num}th email address from @var{address}.

@end deffn

@c snarfed from mu_address.c:105
@deffn {Scheme Procedure} mu-address-get-domain address [num]
Return domain part of the @var{num}th email address from @var{address}.

@end deffn

@c snarfed from mu_address.c:115
@deffn {Scheme Procedure} mu-address-get-local address [num]
Return local part of the @var{num}th email address from @var{address}.

@end deffn

@c snarfed from mu_address.c:125
@deffn {Scheme Procedure} mu-address-get-count address
Return number of parts in email address @var{address}.

@end deffn

@c snarfed from mu_address.c:152
@deffn {Scheme Procedure} mu-username->email [name]
Deduce user's email address from his username. If @var{name} is omitted, 
current username is assumed

@end deffn
