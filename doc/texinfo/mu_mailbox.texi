mu-mailbox?
@c snarfed from mu_mailbox.c:129
@deffn {Scheme Procedure} mu-mailbox? scm
Return @code{true} if @var{scm} is a Mailutils mailbox.

@end deffn

mu-user-mailbox-url
@c snarfed from mu_mailbox.c:138
@deffn {Scheme Procedure} mu-user-mailbox-url user
Return URL of the default mailbox for user @var{user}.
@end deffn

mu-folder-directory
@c snarfed from mu_mailbox.c:162
@deffn {Scheme Procedure} mu-folder-directory [url]
If @var{url} is given, sets it as a name of the user's folder directory.
Returns the current value of the folder directory.
@end deffn

mu-mailbox-open
@c snarfed from mu_mailbox.c:191
@deffn {Scheme Procedure} mu-mailbox-open url mode
Opens the mailbox specified by @var{url}. The @var{mode} argument defines
access mode for the mailbox. It is a string, consisting of one or more of the
following characters:

@multitable @columnfractions 0.20 0.70
@headitem @var{mode} @tab Meaning
@item r @tab Open for reading.
@item w @tab Open for writing.
@item a @tab Open for appending to the end of the mailbox.
@item c @tab Create the mailbox if it does not exist.
@end multitable

@end deffn

@c snarfed from mu_mailbox.c:265
@deffn {Scheme Procedure} mu-mailbox-close mbox
Closes mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:280
@deffn {Scheme Procedure} mu-mailbox-get-url mbox
Returns URL of the mailbox @var{MBOX}.
@end deffn

@c snarfed from mu_mailbox.c:301
@deffn {Scheme Procedure} mu-mailbox-get-message mbox msgno
Retrieve from message #@var{msgno} from the mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:327
@deffn {Scheme Procedure} mu-mailbox-messages-count mbox
Returns number of messages in the mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:348
@deffn {Scheme Procedure} mu-mailbox-expunge mbox
Expunges deleted messages from the mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:367
@deffn {Scheme Procedure} mu-mailbox-sync mbox
Synchronize changes to @var{mbox} with its storage.
@end deffn

@c snarfed from mu_mailbox.c:388
@deffn {Scheme Procedure} mu-mailbox-flush mbox [expunge]
Mark all messages in @var{mbox} as seen and synchronize all changes with its storage.  If @var{expunge} is @samp{#t}, expunge deleted messages as well.
@end deffn

@c snarfed from mu_mailbox.c:412
@deffn {Scheme Procedure} mu-mailbox-append-message mbox mesg
Appends message @var{mesg} to the mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:449
@deffn {Scheme Procedure} mu-mailbox-first-message mbox
Returns first message from the mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:476
@deffn {Scheme Procedure} mu-mailbox-next-message mbox
Returns next message from the mailbox @var{mbox}.
@end deffn

@c snarfed from mu_mailbox.c:510
@deffn {Scheme Procedure} mu-mailbox-more-messages? mbox
Returns @samp{#t} if there are more messages in the mailbox @var{mbox}
ahead of current iterator position.  Usually this function is used after
a call to @samp{mu-mailbox-first-message} or @samp{mu-mailbox-next-message}.
If not, it initializes the iterator and points it to the first message inthe mailbox.
@end deffn

@c snarfed from mu_mailbox.c:541
@deffn {Scheme Procedure} mu-mailbox-get-size mbox
Return size of the mailbox @var{mbox}.
@end deffn
